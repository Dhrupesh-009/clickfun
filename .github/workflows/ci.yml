name: ClickFun CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: 🧪 測試與品質檢查
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: 📥 Checkout 程式碼
        uses: actions/checkout@v4

      - name: 🟢 設定 Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: dev-tools/package-lock.json

      - name: 📦 安裝依賴
        run: |
          cd dev-tools
          npm ci

      - name: 🧪 執行單元測試
        run: |
          cd dev-tools
          npm test -- --coverage --watchAll=false

      - name: 🌐 啟動測試伺服器
        run: |
          cd dev-tools
          npm run serve &
          sleep 5

      - name: 🎭 執行 E2E 測試
        run: |
          cd dev-tools
          npm run test:e2e -- --watchAll=false

      - name: 📊 上傳測試覆蓋率
        uses: codecov/codecov-action@v3
        with:
          file: ./dev-tools/coverage/lcov.info
          flags: unittests
          name: clickfun-coverage

      - name: 📸 上傳測試截圖 (失敗時)
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-screenshots-${{ matrix.node-version }}
          path: dev-tools/screenshots/
          retention-days: 7

  lighthouse:
    name: 🏮 Lighthouse PWA 審核
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 📥 Checkout 程式碼
        uses: actions/checkout@v4

      - name: 🟢 設定 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: 📦 安裝依賴
        run: |
          cd dev-tools
          npm ci

      - name: 🌐 啟動應用伺服器
        run: |
          cd dev-tools
          npm run serve &
          sleep 10

      - name: 🏮 執行 Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: 📊 上傳 Lighthouse 報告
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: .lighthouseci/
          retention-days: 30

  security:
    name: 🔒 安全性掃描
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout 程式碼
        uses: actions/checkout@v4

      - name: 🔍 執行 CodeQL 分析
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: 🔍 執行 CodeQL 掃描
        uses: github/codeql-action/analyze@v2

  deploy-preview:
    name: 🚀 部署預覽
    runs-on: ubuntu-latest
    needs: [test, lighthouse]
    if: github.event_name == 'pull_request'

    steps:
      - name: 📥 Checkout 程式碼
        uses: actions/checkout@v4

      - name: 🚀 部署到 Netlify (預覽)
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: "."
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  deploy-production:
    name: 🌟 生產環境部署
    runs-on: ubuntu-latest
    needs: [test, lighthouse, security]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Checkout 程式碼
        uses: actions/checkout@v4

      - name: 🚀 部署到 Netlify (生產)
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: "."
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Production deployment"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: 📢 發送部署通知
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: "#deployments"
          text: "🎮 ClickFun 已成功部署到生產環境！"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
